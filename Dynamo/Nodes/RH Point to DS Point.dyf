<Workspace Version="0.7.6.4145" X="96.0778929474939" Y="48.7771781619855" zoom="1" Name="RH Point to DS Point" ID="fed4112f-d408-4b31-b5d2-64e8a68f85f6" Description="Converts Rhino point object to Design Script point." Category="Archi-lab_MantisShrimp.Rhinoceros.Geometry">
  <NamespaceResolutionMap />
  <Elements>
    <DSIronPythonNode.PythonNode guid="bc76f7f6-69cd-429a-a322-13e6e10e4a38" type="DSIronPythonNode.PythonNode" nickname="Python Script" x="250" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" inputcount="2">
      <Script>#Copyright(c) 2015, Konrad Sobon
# @arch_laboratory, http://archi-lab.net

import clr
import sys
clr.AddReference('ProtoGeometry')

pyt_path = r'C:\Program Files (x86)\IronPython 2.7\Lib'
sys.path.append(pyt_path)

import os
appDataPath = os.getenv('APPDATA')
msPath = appDataPath + r"\Dynamo\0.7\packages\Mantis Shrimp\extra"
rhPath = appDataPath + r"\Dynamo\0.7\packages\Mantis Shrimp\bin"
rhDllPath = appDataPath + r"\Dynamo\0.7\packages\Mantis Shrimp\bin\RhinoCommon.dll"
if msPath not in sys.path:
	sys.path.Add(msPath)
if rhPath not in sys.path:
	sys.path.Add(rhPath)
	clr.AddReferenceToFileAndPath(rhDllPath)

from Autodesk.DesignScript.Geometry import *
import Rhino as rc

#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN
rhObjects = IN[0]
_units = IN[1]

#unit conversion function from Rhino to DS
def toDSUnits(_units):
	if _units == rc.UnitSystem.Millimeters:
		return 0.001
	elif _units == rc.UnitSystem.Centimeters:
		return 0.01
	elif _units == rc.UnitSystem.Decimeters:
		return 0.1
	elif _units == rc.UnitSystem.Meters:
		return 1
	elif _units == rc.UnitSystem.Inches:
		return 0.0254
	elif _units == rc.UnitSystem.Feet:
		return 0.3048
	elif _units == rc.UnitSystem.Yards:
		return 0.9144

#point/control point conversion function
def rhPointToPoint(rhPoint):
	rhPointX = rhPoint.Location.X * toDSUnits(_units)
	rhPointY = rhPoint.Location.Y * toDSUnits(_units)
	rhPointZ = rhPoint.Location.Z * toDSUnits(_units)
	return Point.ByCoordinates(rhPointX, rhPointY, rhPointZ)

#convert rhino/gh geometry to ds geometry
dsPoints = []
for i in rhObjects:
	try:
		i = i.Geometry
	except:
		pass
	if i.ToString() == "Rhino.Geometry.Point":
		dsPoints.append(rhPointToPoint(i))

#Assign your output to the OUT variable
OUT = dsPoints</Script>
    </DSIronPythonNode.PythonNode>
    <Dynamo.Nodes.Symbol guid="f95e9c73-9736-40e6-ba45-de4d25fae224" type="Dynamo.Nodes.Symbol" nickname="Input" x="0" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="Rhino Object(s)" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Output guid="15acb6e9-b68c-4987-ab3f-2c269fe68571" type="Dynamo.Nodes.Output" nickname="Output" x="449" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="Point(s)" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Symbol guid="b5aeb61a-7635-445a-b885-50812b12975e" type="Dynamo.Nodes.Symbol" nickname="Input" x="-3.12836048304285" y="64.3552849937827" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="Units" />
    </Dynamo.Nodes.Symbol>
  </Elements>
  <Connectors>
    <Dynamo.Models.ConnectorModel start="bc76f7f6-69cd-429a-a322-13e6e10e4a38" start_index="0" end="15acb6e9-b68c-4987-ab3f-2c269fe68571" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="f95e9c73-9736-40e6-ba45-de4d25fae224" start_index="0" end="bc76f7f6-69cd-429a-a322-13e6e10e4a38" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="b5aeb61a-7635-445a-b885-50812b12975e" start_index="0" end="bc76f7f6-69cd-429a-a322-13e6e10e4a38" end_index="1" portType="0" />
  </Connectors>
  <Notes />
</Workspace>