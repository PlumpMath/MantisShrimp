<Workspace Version="0.7.6.4145" X="128.747447867171" Y="51.6768447489201" zoom="1" Name="RH Circle to DS Circle" ID="722b939a-2209-4158-b17b-0a7436921620" Description="Converts Rhino Circle to Design Script circle. Keep in mind that OpenNURBS has limited ability to expose Ellipse and Circle methods so not all &quot;circles&quot; will be able to pass this node." Category="Archi-lab_MantisShrimp.Rhinoceros.Geometry">
  <NamespaceResolutionMap />
  <Elements>
    <DSIronPythonNode.PythonNode guid="6fc850f2-1755-4c74-b16d-5e36051c091a" type="DSIronPythonNode.PythonNode" nickname="Python Script" x="250" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" inputcount="2">
      <Script>#Copyright(c) 2015, Konrad Sobon
# @arch_laboratory, http://archi-lab.net

import clr
import sys
clr.AddReference('ProtoGeometry')

pyt_path = r'C:\Program Files (x86)\IronPython 2.7\Lib'
sys.path.append(pyt_path)

import os
appDataPath = os.getenv('APPDATA')
msPath = appDataPath + r"\Dynamo\0.7\packages\Mantis Shrimp\extra"
rhPath = appDataPath + r"\Dynamo\0.7\packages\Mantis Shrimp\bin"
rhDllPath = appDataPath + r"\Dynamo\0.7\packages\Mantis Shrimp\bin\RhinoCommon.dll"
if msPath not in sys.path:
	sys.path.Add(msPath)
if rhPath not in sys.path:
	sys.path.Add(rhPath)
	clr.AddReferenceToFileAndPath(rhDllPath)

from Autodesk.DesignScript.Geometry import *
import Rhino as rc

#The inputs to this node will be stored as a list in the IN variable.
dataEnteringNode = IN
rhObjects = IN[0]
_units = IN[1]

#unit conversion function from Rhino to DS
def toDSUnits(_units):
	if _units == rc.UnitSystem.Millimeters:
		return 0.001
	elif _units == rc.UnitSystem.Centimeters:
		return 0.01
	elif _units == rc.UnitSystem.Decimeters:
		return 0.1
	elif _units == rc.UnitSystem.Meters:
		return 1
	elif _units == rc.UnitSystem.Inches:
		return 0.0254
	elif _units == rc.UnitSystem.Feet:
		return 0.3048
	elif _units == rc.UnitSystem.Yards:
		return 0.9144

#Vector3d conversion function
def rhVector3dToVector(rhVector):
	VectorX = rhVector.X * toDSUnits(_units)
	VectorY = rhVector.Y * toDSUnits(_units)
	VectorZ = rhVector.Z * toDSUnits(_units)
	dsVector = Vector.ByCoordinates(VectorX, VectorY, VectorZ)
	return dsVector

#3dPoint Conversion function
def rhPoint3dToPoint(rhPoint):
	rhPointX = rhPoint.X * toDSUnits(_units)
	rhPointY = rhPoint.Y * toDSUnits(_units)
	rhPointZ = rhPoint.Z * toDSUnits(_units)
	dsPoint = Point.ByCoordinates(rhPointX, rhPointY, rhPointZ)
	return dsPoint
	
#Plane conversion function
def rhPlaneToPlane(rhPlane):
	normal = rhVector3dToVector(rhPlane.Normal)
	origin = rhPoint3dToPoint(rhPlane.Origin)
	dsPlane = Plane.ByOriginNormal(origin, normal)
	return dsPlane

#circle conversion function
def rhCircleToCircle(rhCurve):
	rhCircle = rhCurve.TryGetCircle()[1]
	radius = rhCircle.Radius * toDSUnits(_units)
	plane = rhPlaneToPlane(rhCircle.Plane)
	dsCircle = Circle.ByPlaneRadius(plane, radius)
	return dsCircle

#convert rhino/gh geometry to ds geometry
dsCircles = []
for i in rhObjects:
	try:
		i = i.Geometry
	except:
		pass
	if i.ToString() == "Rhino.Geometry.ArcCurve" and i.IsCircle():
		dsCircles.append(rhCircleToCircle(i))

#Assign your output to the OUT variable
OUT = dsCircles</Script>
    </DSIronPythonNode.PythonNode>
    <Dynamo.Nodes.Symbol guid="7da875a9-aa00-4ec5-9501-8c77c5588030" type="Dynamo.Nodes.Symbol" nickname="Input" x="0" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="Rhino Object(s)" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Output guid="983bc7f0-0b10-42be-8332-325bedb19378" type="Dynamo.Nodes.Output" nickname="Output" x="449" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="Circle(s)" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Symbol guid="d681949f-5a87-41e3-b71b-3589c9444661" type="Dynamo.Nodes.Symbol" nickname="Input" x="-4.35135930355835" y="64.2639304679218" isVisible="true" isUpstreamVisible="true" lacing="Disabled">
      <Symbol value="Units" />
    </Dynamo.Nodes.Symbol>
  </Elements>
  <Connectors>
    <Dynamo.Models.ConnectorModel start="6fc850f2-1755-4c74-b16d-5e36051c091a" start_index="0" end="983bc7f0-0b10-42be-8332-325bedb19378" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="7da875a9-aa00-4ec5-9501-8c77c5588030" start_index="0" end="6fc850f2-1755-4c74-b16d-5e36051c091a" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="d681949f-5a87-41e3-b71b-3589c9444661" start_index="0" end="6fc850f2-1755-4c74-b16d-5e36051c091a" end_index="1" portType="0" />
  </Connectors>
  <Notes />
</Workspace>